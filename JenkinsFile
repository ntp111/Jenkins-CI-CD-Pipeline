pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven...'
                echo 'Tool: Maven'
                // Example: sh 'mvn clean package' (Not implemented)
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                echo 'Tools: JUnit for unit tests, TestNG for integration tests'
                // Example: sh 'mvn test' (Not implemented)
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                echo 'Tool: SonarQube'
                // Example: sh 'sonar-scanner' (Not implemented)
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                echo 'Tool: OWASP Dependency-Check'
                // Example: sh 'dependency-check --project myproject --scan ./' (Not implemented)
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to staging environment...'
                echo 'Tool: AWS CLI for deploying to an AWS EC2 instance'
                // Example: sh 'aws deploy ...' (Not implemented)
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on the staging environment...'
                echo 'Tools: Selenium for web applications, Postman for API testing'
                // Example: sh 'run-selenium-tests' or 'postman-collection-runner' (Not implemented)
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to production environment...'
                echo 'Tool: AWS CLI for deploying to an AWS EC2 instance'
                // Example: sh 'aws deploy ...' (Not implemented)
            }
        }
    }


    post {
        always {
            mail to: 'ngtuanphong98@gmail.com',
                subject: "Pipeline ${currentBuild.fullDisplayName} completed",
                body: """Pipeline ${currentBuild.fullDisplayName} completed with status ${currentBuild.currentResult}.
                
                Please check the Jenkins console output for more details."""
        }
    }

}
